@model List<DataLayer.Interfaces.ProductInterface.IProductJoinCategory>
@using DataLayer.Entities
@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    string? dataString = HttpContextAccessor.HttpContext.Session.GetString("DataUser");
    Customer dataUser = null;
    if (dataString != null)
    {
        dataUser = JsonConvert.DeserializeObject<Customer>(dataString);
    }
}
@{
    ViewData["Title"] = "Index";
    string contentString = "";
    int countProduct = ViewBag.countProduct;
    int pageCount = ViewBag.pageCount;
    int page = ViewBag.currentPage != null && ViewBag.currentPage > 0 ? ViewBag.currentPage : 1;
    int offset = 2;//number display page
    int from = page - offset;
    int to = page + offset;
    if (from <= 0)
    {
        from = 1;
        to = offset * 2;
    }


    if (to > pageCount)
    {
        to = pageCount;
    }

    if ((string)Context.Request.Query["minPrices"] != null)
    {
        contentString = contentString + "&minPrices=" + Context.Request.Query["minPrices"];
    }

    if ((string)Context.Request.Query["maxPrices"] != null)
    {
        contentString = contentString + "&maxPrices=" + Context.Request.Query["maxPrices"];
    }

    if ((string)Context.Request.Query["name"] != null)
    {
        contentString = contentString + "&name=" + Context.Request.Query["name"];
    }

    if ((string)Context.Request.Query["typeEndDate"] != null)
    {
        contentString = contentString + "&typeEndDate=" + Context.Request.Query["typeEndDate"];
    }
}

@if (dataUser != null && dataUser.Role == 2)
{
    <p>
        <a asp-action="Create">Tạo mới</a>
    </p>
}

<div class="container mx-auto d-flex align-items-center">
    <input type="number" id="minPrices" placeholder="Giá sản phẩm từ" value="@Context.Request.Query["minPrices"]">
    <input type="number" id="maxPrices" placeholder="Giá sản phẩm đến" value="@Context.Request.Query["maxPrices"]" class="ms-4">
    <input type="text" id="nameSearch" placeholder="Tên sản phẩm" value="@Context.Request.Query["name"]" class="ms-4">
    @if (dataUser != null && dataUser.Role == 2)
    {
        <select name="typeEndDate" class="ms-4" id="typeEndDate">
            <option value="0">---</option>
            @if (Context.Request.Query["typeEndDate"] == "1")
            {
                <option selected value="1">Còn hạn</option>
            }
            else
            {
                <option value="1">Còn hạn</option>
            }

            @if (Context.Request.Query["typeEndDate"] == "2")
            {
                <option selected value="2">Hết hạn sử dụng</option>
            }
            else
            {
                <option value="2">Hết hạn sử dụng</option>
            }
        </select>
    }
    <button type="button" class="btn btn-primary ms-4" onclick="onSearch(@(page))">Tìm kiếm</button>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                ID sản phẩm
            </th>
            <th>
                Tên sản phẩm
            </th>
            <th>
                Hình ảnh
            </th>
            <th>
                Giá
            </th>
            <th>
                Số lượng
            </th>
            <th>
                Loại sản phẩm
            </th>
            <th>
                Giảm giá
            </th>
            <th>
                Ngày hết hạn
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                <img src="@Html.DisplayFor(modelItem => item.Image)" width="200" height="200" alt="Alternate Text" />
            </td>
            <td>
                @if (item.percentSale > 0)
                {
                    <div class="d-flex">
                            <p style="text-decoration: line-through; margin-bottom: 0px">@item.Prices.ToString("n0") đ</p>
                            <p style="margin-left: 16px;">@((item.Prices * (100 - item.percentSale) / 100).ToString("n0")) đ</p>
                    </div>
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.Prices)
                }
                    
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Count)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.percentSale) %
            </td>
            <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                    @if (dataUser != null && dataUser.Role == 2)
                    {
                        @Html.ActionLink("Sửa", "Edit", new { id = item.Id })
                        <span>|</span>
                    }
                    @if (dataUser != null && dataUser.Role == 2)
                    {
                        @Html.ActionLink("Xóa", "Delete", new { id = item.Id })
                        <span>|</span>
                    }
                    @Html.ActionLink("Thêm vào giỏ hàng", "AddToCart", new { 
                        Id = item.Id, 
                        ProductName = item.ProductName,
                        Image = item.Image,
                        Prices = item.Prices,
                        SumCount = item.Count,
                        PercentSale = item.percentSale
                    })
            </td>
        </tr>
}
    </tbody>
</table>
    
<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(page <= 1 ? "disabled" : "")"><a class="page-link" href="/Product?page=@(page - 1)@contentString">Trước</a></li>
        @{
            for (int i = from; i <= to; i++)
            {
                if (page == i)
                {
                    <li class="page-item active"><a class="page-link" href="/Product?page=@i@contentString">@i</a></li>
                }
                else
                {
                    <li class="page-item"><a class="page-link" href="/Product?page=@i@contentString">@i</a></li>
                }
            }

            if (page < pageCount - (to / 2))
            {
                <li><a>...</a></li>
                <li class="page-item"><a class="page-link" href="/Product?page=@pageCount@contentString">Trang cuối</a></li>
            }
        }
        
        <li class="page-item @(page >= pageCount ? "disabled" : "")"><a class="page-link" href="/Product?page=@(page + 1)@contentString">Sau</a></li>
    </ul>
</nav>


<script>
    const onSearch = async (page) => {
        const minPrices = document.getElementById('minPrices');
        const maxPrices = document.getElementById('maxPrices');
        const nameSearch = document.getElementById('nameSearch');
        const typeEndDate = document.getElementById('typeEndDate');

        const requestBody = {
            page,
            name: nameSearch.value,
            minPrices: minPrices.value,
            maxPrices: maxPrices.value,
            typeEndDate: Number(typeEndDate.value)
        }

        location.href = '/Product?' + new URLSearchParams(requestBody);
    }
</script>
