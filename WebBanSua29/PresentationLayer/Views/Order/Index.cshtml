@model IEnumerable<DataLayer.Entities.Order>

@{
    ViewData["Title"] = "Index";

    int countProduct = ViewBag.countProduct;
    int pageCount = ViewBag.pageCount;
    int page = ViewBag.currentPage != null && ViewBag.currentPage > 0 ? ViewBag.currentPage : 1;
    int offset = 2;//number display page
    int from = page - offset;
    int to = page + offset;
    if (from <= 0)
    {
        from = 1;
        to = offset * 2;
    }


    if (to > pageCount)
    {
        to = pageCount;
    }
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                Tên khách hàng
            </th>
            <th>
                Địa chỉ khách hàng
            </th>
            <th>
                Số điện thoại
            </th>
            <th>
                Email
            </th>
            <th>
                Tổng phí
            </th>
            <th>
                Ngày đặt hàng
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerPhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerEmail)
            </td>
            <td>
                    @(item.SumPrices.ToString("n0")) đ
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @Html.ActionLink("Chi tiết", "Detail", new { id = item.Id })
            </td>
        </tr>
}
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(page <= 1 ? "disabled" : "")"><a class="page-link" href="/Order?page=@(page - 1)">Trước</a></li>
        @{
            for (int i = from; i <= to; i++)
            {
                if (page == i)
                {
                    <li class="page-item active"><a class="page-link" href="/Order?page=@i">@i</a></li>
                }
                else
                {
                    <li class="page-item"><a class="page-link" href="/Order?page=@i">@i</a></li>
                }
            }

            if (page < pageCount - (to / 2))
            {
                <li><a>...</a></li>
                <li class="page-item"><a class="page-link" href="/Order?page=@pageCount">Trang cuối</a></li>
            }
        }

        <li class="page-item @(page >= pageCount ? "disabled" : "")"><a class="page-link" href="/Order?page=@(page + 1)">Sau</a></li>
    </ul>
</nav>


<script>
    const onSearch = async (page) => {

        const requestBody = {
            page
        }

        location.href = '/Order?' + new URLSearchParams(requestBody);
    }
</script>
